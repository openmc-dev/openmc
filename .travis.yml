sudo: required
dist: trusty
language: python
python:
  - "2.7"
  - "3.4"
addons:
  apt:
    packages:
    - gfortran
    - g++
    - mpich
    - libmpich-dev
cache:
  directories:
  - $HOME/nndc_hdf5
env:
  - OPENMC_CONFIG="check_source"
  - OPENMC_CONFIG="^hdf5-debug$"
  - OPENMC_CONFIG="^omp-hdf5-debug$"
  - OPENMC_CONFIG="^mpi-hdf5-debug$"
  - OPENMC_CONFIG="^phdf5-debug$"

# We aren't testing the check_source script so just run it with Python 3.
matrix:
  exclude:
    - python: "2.7"
      env: OPENMC_CONFIG="check_source"

before_install:
  # ============== Handle Python third-party packages ==============
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - if [[ $OPENMC_CONFIG != "check_source" ]]; then
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION six numpy scipy h5py=2.5 pandas;
      source activate test-environment;
      sudo add-apt-repository ppa:nschloe/hdf5-backports -y;
      sudo apt-get update -q;
      sudo apt-get install libhdf5-serial-dev libhdf5-mpich-dev -y;
      export FC=gfortran;
      export MPI_DIR=/usr;
      export PHDF5_DIR=/usr;
      export HDF5_DIR=/usr;
    fi

install: true

before_script:
  - if [[ $OPENMC_CONFIG != "check_source" ]]; then
      if [[ ! -e $HOME/nndc_hdf5/cross_sections.xml ]]; then
        wget https://anl.box.com/shared/static/a6sw2cep34wlz6b9i9jwiotaqoayxcxt.xz -O - | tar -C $HOME -xvJ;
      fi;
      export OPENMC_CROSS_SECTIONS=$HOME/nndc_hdf5/cross_sections.xml;
      git clone --branch=master git://github.com/smharper/windowed_multipole_library.git wmp_lib;
      tar xzvf wmp_lib/multipole_lib.tar.gz;
      export OPENMC_MULTIPOLE_LIBRARY=$PWD/multipole_lib;
    fi

script:
  - cd tests
  - export OMP_NUM_THREADS=2
  - if [[ $OPENMC_CONFIG == "check_source" ]]; then
      ./check_source.py;
    else
      ./run_tests.py -C $OPENMC_CONFIG -j 2;
    fi
  - cd ..
