/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ersn.openmc;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.filechooser.FileNameExtensionFilter;
import jsyntaxpane.DefaultSyntaxKit;
import jsyntaxpane.util.Configuration;

/**
 *
 * @author elbakkali
 */

/**
 *
 * @author elbakkali
 */
public class main extends javax.swing.JFrame {
final static String DarkGreen="0x006400";
final static String DarkBlue ="0x00008B";
final static String Crimson="0xDC143C";
final static String SlateGray="0x708090";
final static String Salmon="0xFA8072";
String file_name=null;
String project_full_path="";
String openmc_options=" ";
static int id=0;
String open_action="no";
singleton tmp = singleton.getInstance();
    /**
     * Creates new form NewJFrame
     */
    public main() {
    initComponents();
    
    DefaultSyntaxKit.initKit();     
    }
    
public void save_xml_file(String xml_file,String path,javax.swing.JEditorPane target){
try {
                    FileWriter lu = new FileWriter(path+"/"+xml_file);// Créer un objet java.io.FileWriter avec comme argument le mon du fichier dans lequel enregsitrer
                    BufferedWriter fluxS = new BufferedWriter(lu); // Mettre le flux en tampon (en cache)
                    fluxS.write(target.getText()); //Balancer dans le flux le contenu de la zone de texte
                    fluxS.close(); // Fermer le flux (c’est toujours mieux de le fermer explicitement)
     } catch (IOException er) {;}
}


public void open_xml_file(String xml_file, javax.swing.JEditorPane target,String path){
try {
File fileDir = new File(path+"/"+xml_file);
target.setText("");
BufferedReader in = new BufferedReader(
new InputStreamReader( new FileInputStream(fileDir), "UTF8"));
String str;
while ((str = in.readLine()) != null) {
target.setText(target.getText().toString()+str+"\n");
    }
in.close();
    } 
    catch (UnsupportedEncodingException e) 
    {
 System.out.println(e.getMessage());
    } 
    catch (IOException e) 
    {
 System.out.println(e.getMessage());
    }
    catch (Exception e)
    {
 System.out.println(e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jFrame1 = new javax.swing.JFrame();
        container = new javax.swing.JTabbedPane();
        materials_pnl = new javax.swing.JPanel();
        btn_material = new javax.swing.JButton();
        btn_density = new javax.swing.JButton();
        btn_nuclide = new javax.swing.JButton();
        btn_element = new javax.swing.JButton();
        btn_defaults_xs = new javax.swing.JButton();
        btn_comment2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        materialsTxt = new javax.swing.JEditorPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        GuideTxt1 = new javax.swing.JEditorPane();
        geometry_pnl = new javax.swing.JPanel();
        btn_surface = new javax.swing.JButton();
        btn_cell = new javax.swing.JButton();
        btn_lattice = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        geometryTxt = new javax.swing.JEditorPane();
        comment6 = new javax.swing.JButton();
        settings_pnl = new javax.swing.JPanel();
        btn_confidence_intervals = new javax.swing.JButton();
        btn_cross_sections = new javax.swing.JButton();
        btn_cutoff = new javax.swing.JButton();
        btn_eignvalue = new javax.swing.JButton();
        btn_energy_grid = new javax.swing.JButton();
        btn_entropy = new javax.swing.JButton();
        btn_fixed_source = new javax.swing.JButton();
        btn_no_reduce = new javax.swing.JButton();
        btn_output = new javax.swing.JButton();
        btn_output_path = new javax.swing.JButton();
        btn_ptables = new javax.swing.JButton();
        btn_run_cmfd = new javax.swing.JButton();
        btn_seed = new javax.swing.JButton();
        btn_source_point = new javax.swing.JButton();
        btn_survival_biasing = new javax.swing.JButton();
        btn_threads = new javax.swing.JButton();
        btn_trace = new javax.swing.JButton();
        btn_track = new javax.swing.JButton();
        btn_uniform_fs = new javax.swing.JButton();
        btn_verbosity = new javax.swing.JButton();
        btn_source = new javax.swing.JButton();
        btn_comment = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        settingsTxt = new javax.swing.JEditorPane();
        tallies_pnl = new javax.swing.JPanel();
        btn_tally = new javax.swing.JButton();
        btn_mesh = new javax.swing.JButton();
        btn_assume_separate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        talliesTxt = new javax.swing.JEditorPane();
        btn_comment3 = new javax.swing.JButton();
        plotting_pnl = new javax.swing.JPanel();
        btn_plot_slice = new javax.swing.JButton();
        btn_plot_voxel = new javax.swing.JButton();
        comment4 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        plottingTxt = new javax.swing.JEditorPane();
        cmfd_pnl = new javax.swing.JPanel();
        btn_active_flush = new javax.swing.JButton();
        btn_begin = new javax.swing.JButton();
        btn_display = new javax.swing.JButton();
        btn_feedback = new javax.swing.JButton();
        btn_inactive = new javax.swing.JButton();
        btn_inactive_flush = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        cmfdTxt = new javax.swing.JEditorPane();
        btn_ksp_monitor = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        btn_norm = new javax.swing.JButton();
        btn_num_flushes = new javax.swing.JButton();
        run_adjoint = new javax.swing.JButton();
        btn_power_monitor = new javax.swing.JButton();
        btn_snes_monitor = new javax.swing.JButton();
        btn_solver = new javax.swing.JButton();
        btn_write_matrices = new javax.swing.JButton();
        comment5 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        GuideTxt = new javax.swing.JEditorPane();
        tlb = new javax.swing.JToolBar();
        lbl = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        menu_new_openmc_project = new javax.swing.JMenuItem();
        menu_existing_project = new javax.swing.JMenuItem();
        menu_save_project = new javax.swing.JMenuItem();
        menu_exit = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menu_run_openmc = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        menu_about = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ERSN-OpenMC developed by Jaafar EL Bakkali & Tarek EL Bardouni");
        setBackground(new java.awt.Color(255, 204, 0));
        setLocationByPlatform(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        container.setBackground(java.awt.SystemColor.control);

        materials_pnl.setBackground(java.awt.SystemColor.controlHighlight);

        btn_material.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_material.setForeground(java.awt.SystemColor.info);
        btn_material.setText("material");
        btn_material.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_material.setFocusPainted(false);
        btn_material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_materialActionPerformed(evt);
            }
        });

        btn_density.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_density.setForeground(java.awt.SystemColor.info);
        btn_density.setText("density");
        btn_density.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_density.setFocusPainted(false);
        btn_density.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_densityActionPerformed(evt);
            }
        });

        btn_nuclide.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_nuclide.setForeground(java.awt.SystemColor.info);
        btn_nuclide.setText("nuclide");
        btn_nuclide.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_nuclide.setFocusPainted(false);
        btn_nuclide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuclideActionPerformed(evt);
            }
        });

        btn_element.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_element.setForeground(java.awt.SystemColor.info);
        btn_element.setText("element");
        btn_element.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_element.setFocusPainted(false);
        btn_element.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_elementActionPerformed(evt);
            }
        });

        btn_defaults_xs.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_defaults_xs.setForeground(java.awt.SystemColor.info);
        btn_defaults_xs.setText("default_xs");
        btn_defaults_xs.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_defaults_xs.setFocusPainted(false);
        btn_defaults_xs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_defaults_xsActionPerformed(evt);
            }
        });

        btn_comment2.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_comment2.setForeground(java.awt.SystemColor.info);
        btn_comment2.setText("comment");
        btn_comment2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_comment2.setFocusPainted(false);
        btn_comment2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_comment2ActionPerformed(evt);
            }
        });

        materialsTxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                materialsTxtCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                materialsTxtInputMethodTextChanged(evt);
            }
        });
        jScrollPane4.setViewportView(materialsTxt);

        GuideTxt1.setBackground(new java.awt.Color(231, 236, 125));
        GuideTxt1.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        GuideTxt1.setPreferredSize(new java.awt.Dimension(100, 20));
        GuideTxt1.setRequestFocusEnabled(false);
        jScrollPane8.setViewportView(GuideTxt1);

        javax.swing.GroupLayout materials_pnlLayout = new javax.swing.GroupLayout(materials_pnl);
        materials_pnl.setLayout(materials_pnlLayout);
        materials_pnlLayout.setHorizontalGroup(
            materials_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(materials_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(materials_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_element, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_nuclide, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_density, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_material, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_defaults_xs, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                    .addComponent(btn_comment2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(materials_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(materials_pnlLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(jScrollPane8)))
        );
        materials_pnlLayout.setVerticalGroup(
            materials_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, materials_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(materials_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(materials_pnlLayout.createSequentialGroup()
                        .addComponent(btn_material)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_density)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_nuclide)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_element)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_defaults_xs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_comment2))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137))
        );

        container.addTab("Materials ", materials_pnl);

        geometry_pnl.setBackground(java.awt.SystemColor.controlHighlight);
        geometry_pnl.setForeground(java.awt.SystemColor.activeCaption);

        btn_surface.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_surface.setForeground(java.awt.SystemColor.info);
        btn_surface.setText("surface");
        btn_surface.setToolTipText("This element can have the following attributes or sub-elements: id, type, coeffs and  boundary");
        btn_surface.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_surface.setFocusPainted(false);
        btn_surface.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_surfaceActionPerformed(evt);
            }
        });

        btn_cell.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_cell.setForeground(java.awt.SystemColor.info);
        btn_cell.setText("cell");
        btn_cell.setToolTipText("This element can have the following attributes or sub-elements: id, universe, fill, material, surfaces, rotation and translation");
        btn_cell.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_cell.setFocusPainted(false);
        btn_cell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cellActionPerformed(evt);
            }
        });

        btn_lattice.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_lattice.setForeground(java.awt.SystemColor.info);
        btn_lattice.setText("lattice");
        btn_lattice.setToolTipText("This element can be used to represent repeating structures (e.g. fuel pins in an assembly) or other geometry which naturally fits into a two- or three-dimensional structured mesh. Each cell within the lattice is filled with a specified universe. A <lattice> accepts the following attributes or sub-elements:");
        btn_lattice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_lattice.setFocusPainted(false);
        btn_lattice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_latticeActionPerformed(evt);
            }
        });

        geometryTxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                geometryTxtCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                geometryTxtInputMethodTextChanged(evt);
            }
        });
        jScrollPane2.setViewportView(geometryTxt);

        comment6.setBackground(java.awt.SystemColor.controlDkShadow);
        comment6.setForeground(java.awt.SystemColor.info);
        comment6.setText("comment");
        comment6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        comment6.setFocusPainted(false);
        comment6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comment6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout geometry_pnlLayout = new javax.swing.GroupLayout(geometry_pnl);
        geometry_pnl.setLayout(geometry_pnlLayout);
        geometry_pnlLayout.setHorizontalGroup(
            geometry_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geometry_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(geometry_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(geometry_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_cell, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_surface, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(btn_lattice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(comment6, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        geometry_pnlLayout.setVerticalGroup(
            geometry_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geometry_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(geometry_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(geometry_pnlLayout.createSequentialGroup()
                        .addComponent(btn_surface)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cell)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_lattice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comment6)))
                .addContainerGap(289, Short.MAX_VALUE))
        );

        container.addTab("Geometry ", geometry_pnl);

        settings_pnl.setBackground(java.awt.SystemColor.controlHighlight);
        settings_pnl.setForeground(java.awt.SystemColor.activeCaption);

        btn_confidence_intervals.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_confidence_intervals.setForeground(java.awt.SystemColor.info);
        btn_confidence_intervals.setText("confidence_intervals");
        btn_confidence_intervals.setToolTipText("This element has no attributes and has an accepted value of “true” or “false”");
        btn_confidence_intervals.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_confidence_intervals.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_confidence_intervals.setFocusPainted(false);
        btn_confidence_intervals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confidence_intervalsActionPerformed(evt);
            }
        });

        btn_cross_sections.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_cross_sections.setForeground(java.awt.SystemColor.info);
        btn_cross_sections.setText("cross_sections");
        btn_cross_sections.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_cross_sections.setFocusPainted(false);
        btn_cross_sections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cross_sectionsActionPerformed(evt);
            }
        });

        btn_cutoff.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_cutoff.setForeground(java.awt.SystemColor.info);
        btn_cutoff.setText("cutoff");
        btn_cutoff.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_cutoff.setFocusPainted(false);
        btn_cutoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cutoffActionPerformed(evt);
            }
        });

        btn_eignvalue.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_eignvalue.setForeground(java.awt.SystemColor.info);
        btn_eignvalue.setText("eigenvalue");
        btn_eignvalue.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_eignvalue.setFocusPainted(false);
        btn_eignvalue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eignvalueActionPerformed(evt);
            }
        });

        btn_energy_grid.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_energy_grid.setForeground(java.awt.SystemColor.info);
        btn_energy_grid.setText("energy_grid");
        btn_energy_grid.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_energy_grid.setFocusPainted(false);
        btn_energy_grid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_energy_gridActionPerformed(evt);
            }
        });

        btn_entropy.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_entropy.setForeground(java.awt.SystemColor.info);
        btn_entropy.setText("entropy");
        btn_entropy.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_entropy.setFocusPainted(false);
        btn_entropy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_entropyActionPerformed(evt);
            }
        });

        btn_fixed_source.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_fixed_source.setForeground(java.awt.SystemColor.info);
        btn_fixed_source.setText("fixed_source");
        btn_fixed_source.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_fixed_source.setFocusPainted(false);
        btn_fixed_source.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fixed_sourceActionPerformed(evt);
            }
        });

        btn_no_reduce.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_no_reduce.setForeground(java.awt.SystemColor.info);
        btn_no_reduce.setText("no_reduce");
        btn_no_reduce.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_no_reduce.setFocusPainted(false);
        btn_no_reduce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_no_reduceActionPerformed(evt);
            }
        });

        btn_output.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_output.setForeground(java.awt.SystemColor.info);
        btn_output.setText("output");
        btn_output.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_output.setFocusPainted(false);
        btn_output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_outputActionPerformed(evt);
            }
        });

        btn_output_path.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_output_path.setForeground(java.awt.SystemColor.info);
        btn_output_path.setText("output_path");
        btn_output_path.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_output_path.setFocusPainted(false);
        btn_output_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_output_pathActionPerformed(evt);
            }
        });

        btn_ptables.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_ptables.setForeground(java.awt.SystemColor.info);
        btn_ptables.setText("ptables");
        btn_ptables.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_ptables.setFocusPainted(false);
        btn_ptables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ptablesActionPerformed(evt);
            }
        });

        btn_run_cmfd.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_run_cmfd.setForeground(java.awt.SystemColor.info);
        btn_run_cmfd.setText("run_cmfd");
        btn_run_cmfd.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_run_cmfd.setFocusPainted(false);
        btn_run_cmfd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_run_cmfdActionPerformed(evt);
            }
        });

        btn_seed.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_seed.setForeground(java.awt.SystemColor.info);
        btn_seed.setText("seed");
        btn_seed.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_seed.setFocusPainted(false);
        btn_seed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_seedActionPerformed(evt);
            }
        });

        btn_source_point.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_source_point.setForeground(java.awt.SystemColor.info);
        btn_source_point.setText("source_point");
        btn_source_point.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_source_point.setFocusPainted(false);
        btn_source_point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_source_pointActionPerformed(evt);
            }
        });

        btn_survival_biasing.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_survival_biasing.setForeground(java.awt.SystemColor.info);
        btn_survival_biasing.setText("survival_biasing");
        btn_survival_biasing.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_survival_biasing.setFocusPainted(false);
        btn_survival_biasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_survival_biasingActionPerformed(evt);
            }
        });

        btn_threads.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_threads.setForeground(java.awt.SystemColor.info);
        btn_threads.setText("threads");
        btn_threads.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_threads.setFocusPainted(false);
        btn_threads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_threadsActionPerformed(evt);
            }
        });

        btn_trace.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_trace.setForeground(java.awt.SystemColor.info);
        btn_trace.setText("trace");
        btn_trace.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_trace.setFocusPainted(false);
        btn_trace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_traceActionPerformed(evt);
            }
        });

        btn_track.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_track.setForeground(java.awt.SystemColor.info);
        btn_track.setText("track");
        btn_track.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_track.setFocusPainted(false);
        btn_track.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_trackActionPerformed(evt);
            }
        });

        btn_uniform_fs.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_uniform_fs.setForeground(java.awt.SystemColor.info);
        btn_uniform_fs.setText("uniform_fs");
        btn_uniform_fs.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_uniform_fs.setFocusPainted(false);
        btn_uniform_fs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_uniform_fsActionPerformed(evt);
            }
        });

        btn_verbosity.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_verbosity.setForeground(java.awt.SystemColor.info);
        btn_verbosity.setText("verbosity");
        btn_verbosity.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_verbosity.setFocusPainted(false);
        btn_verbosity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_verbosityActionPerformed(evt);
            }
        });

        btn_source.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_source.setForeground(java.awt.SystemColor.info);
        btn_source.setText("source");
        btn_source.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_source.setFocusPainted(false);
        btn_source.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sourceActionPerformed(evt);
            }
        });

        btn_comment.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_comment.setForeground(java.awt.SystemColor.info);
        btn_comment.setText("comment");
        btn_comment.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_comment.setFocusPainted(false);
        btn_comment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_commentActionPerformed(evt);
            }
        });

        settingsTxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                settingsTxtCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                settingsTxtInputMethodTextChanged(evt);
            }
        });
        jScrollPane5.setViewportView(settingsTxt);

        javax.swing.GroupLayout settings_pnlLayout = new javax.swing.GroupLayout(settings_pnl);
        settings_pnl.setLayout(settings_pnlLayout);
        settings_pnlLayout.setHorizontalGroup(
            settings_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_uniform_fs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_track, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_trace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_threads, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_survival_biasing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_source_point, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_source, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_seed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_run_cmfd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ptables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_output_path, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_no_reduce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_fixed_source, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_entropy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_eignvalue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_energy_grid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_verbosity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_comment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_confidence_intervals, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(btn_cross_sections, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_cutoff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addContainerGap())
        );
        settings_pnlLayout.setVerticalGroup(
            settings_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settings_pnlLayout.createSequentialGroup()
                        .addComponent(btn_confidence_intervals)
                        .addGap(8, 8, 8)
                        .addComponent(btn_cross_sections)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cutoff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eignvalue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_energy_grid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_entropy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_fixed_source)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_no_reduce)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_output)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_output_path)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ptables)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_run_cmfd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_seed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_source)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_source_point)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_survival_biasing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_threads)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_trace)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_track))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(btn_uniform_fs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_verbosity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_comment)
                .addContainerGap())
        );

        container.addTab("Settings ", settings_pnl);

        tallies_pnl.setBackground(java.awt.SystemColor.controlHighlight);

        btn_tally.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_tally.setForeground(java.awt.SystemColor.info);
        btn_tally.setText("tally");
        btn_tally.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_tally.setFocusPainted(false);
        btn_tally.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tallyActionPerformed(evt);
            }
        });

        btn_mesh.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_mesh.setForeground(java.awt.SystemColor.info);
        btn_mesh.setText("mesh");
        btn_mesh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_mesh.setFocusPainted(false);
        btn_mesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_meshActionPerformed(evt);
            }
        });

        btn_assume_separate.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_assume_separate.setForeground(java.awt.SystemColor.info);
        btn_assume_separate.setText("assume_separate");
        btn_assume_separate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_assume_separate.setFocusPainted(false);
        btn_assume_separate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_assume_separateActionPerformed(evt);
            }
        });

        talliesTxt.setMinimumSize(new java.awt.Dimension(100, 20));
        jScrollPane3.setViewportView(talliesTxt);

        btn_comment3.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_comment3.setForeground(java.awt.SystemColor.info);
        btn_comment3.setText("comment");
        btn_comment3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_comment3.setFocusPainted(false);
        btn_comment3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_comment3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tallies_pnlLayout = new javax.swing.GroupLayout(tallies_pnl);
        tallies_pnl.setLayout(tallies_pnlLayout);
        tallies_pnlLayout.setHorizontalGroup(
            tallies_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tallies_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tallies_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tallies_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_mesh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_assume_separate, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(btn_tally, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_comment3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        tallies_pnlLayout.setVerticalGroup(
            tallies_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tallies_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tallies_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tallies_pnlLayout.createSequentialGroup()
                        .addComponent(btn_tally)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mesh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_assume_separate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_comment3)))
                .addGap(261, 261, 261))
        );

        container.addTab("Tallies ", tallies_pnl);

        plotting_pnl.setBackground(java.awt.SystemColor.controlHighlight);

        btn_plot_slice.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_plot_slice.setForeground(java.awt.SystemColor.info);
        btn_plot_slice.setText("plot slice");
        btn_plot_slice.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_plot_slice.setFocusPainted(false);
        btn_plot_slice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plot_sliceActionPerformed(evt);
            }
        });

        btn_plot_voxel.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_plot_voxel.setForeground(java.awt.SystemColor.info);
        btn_plot_voxel.setText("plot voxel");
        btn_plot_voxel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_plot_voxel.setFocusPainted(false);
        btn_plot_voxel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plot_voxelActionPerformed(evt);
            }
        });

        comment4.setBackground(java.awt.SystemColor.controlDkShadow);
        comment4.setForeground(java.awt.SystemColor.info);
        comment4.setText("comment");
        comment4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        comment4.setFocusPainted(false);
        comment4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comment4ActionPerformed(evt);
            }
        });

        plottingTxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                plottingTxtCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                plottingTxtInputMethodTextChanged(evt);
            }
        });
        jScrollPane7.setViewportView(plottingTxt);

        javax.swing.GroupLayout plotting_pnlLayout = new javax.swing.GroupLayout(plotting_pnl);
        plotting_pnl.setLayout(plotting_pnlLayout);
        plotting_pnlLayout.setHorizontalGroup(
            plotting_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plotting_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plotting_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(plotting_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btn_plot_voxel, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addComponent(btn_plot_slice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(comment4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        plotting_pnlLayout.setVerticalGroup(
            plotting_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plotting_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plotting_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plotting_pnlLayout.createSequentialGroup()
                        .addComponent(btn_plot_slice, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_plot_voxel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comment4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(262, 262, 262))
        );

        container.addTab("Geometry Plotting ", plotting_pnl);

        cmfd_pnl.setBackground(java.awt.SystemColor.controlHighlight);

        btn_active_flush.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_active_flush.setForeground(java.awt.SystemColor.info);
        btn_active_flush.setText("active_flush");
        btn_active_flush.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_active_flush.setFocusPainted(false);
        btn_active_flush.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_active_flushMouseEntered(evt);
            }
        });
        btn_active_flush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_active_flushActionPerformed(evt);
            }
        });

        btn_begin.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_begin.setForeground(java.awt.SystemColor.info);
        btn_begin.setText("begin");
        btn_begin.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_begin.setFocusPainted(false);
        btn_begin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_beginMouseEntered(evt);
            }
        });
        btn_begin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_beginActionPerformed(evt);
            }
        });

        btn_display.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_display.setForeground(java.awt.SystemColor.info);
        btn_display.setText("display");
        btn_display.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_display.setFocusPainted(false);
        btn_display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_displayMouseEntered(evt);
            }
        });
        btn_display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_displayActionPerformed(evt);
            }
        });

        btn_feedback.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_feedback.setForeground(java.awt.SystemColor.info);
        btn_feedback.setText("feedback");
        btn_feedback.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_feedback.setFocusPainted(false);
        btn_feedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_feedbackMouseEntered(evt);
            }
        });
        btn_feedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_feedbackActionPerformed(evt);
            }
        });

        btn_inactive.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_inactive.setForeground(java.awt.SystemColor.info);
        btn_inactive.setText("inactive");
        btn_inactive.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_inactive.setFocusPainted(false);
        btn_inactive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_inactiveMouseEntered(evt);
            }
        });
        btn_inactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inactiveActionPerformed(evt);
            }
        });

        btn_inactive_flush.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_inactive_flush.setForeground(java.awt.SystemColor.info);
        btn_inactive_flush.setText("inactive_flush");
        btn_inactive_flush.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_inactive_flush.setFocusPainted(false);
        btn_inactive_flush.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_inactive_flushMouseEntered(evt);
            }
        });
        btn_inactive_flush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inactive_flushActionPerformed(evt);
            }
        });

        cmfdTxt.setPreferredSize(new java.awt.Dimension(100, 20));
        cmfdTxt.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(cmfdTxt);

        btn_ksp_monitor.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_ksp_monitor.setForeground(java.awt.SystemColor.info);
        btn_ksp_monitor.setText("ksp_monitor");
        btn_ksp_monitor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_ksp_monitor.setFocusPainted(false);
        btn_ksp_monitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ksp_monitorActionPerformed(evt);
            }
        });

        jButton53.setBackground(java.awt.SystemColor.controlDkShadow);
        jButton53.setForeground(java.awt.SystemColor.info);
        jButton53.setText("mesh");
        jButton53.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton53.setFocusPainted(false);
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        btn_norm.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_norm.setForeground(java.awt.SystemColor.info);
        btn_norm.setText("norm");
        btn_norm.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_norm.setFocusPainted(false);
        btn_norm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_normActionPerformed(evt);
            }
        });

        btn_num_flushes.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_num_flushes.setForeground(java.awt.SystemColor.info);
        btn_num_flushes.setText("num_flushes");
        btn_num_flushes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_num_flushes.setFocusPainted(false);
        btn_num_flushes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_num_flushesActionPerformed(evt);
            }
        });

        run_adjoint.setBackground(java.awt.SystemColor.controlDkShadow);
        run_adjoint.setForeground(java.awt.SystemColor.info);
        run_adjoint.setText("run_adjoint");
        run_adjoint.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        run_adjoint.setFocusPainted(false);
        run_adjoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_adjointActionPerformed(evt);
            }
        });

        btn_power_monitor.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_power_monitor.setForeground(java.awt.SystemColor.info);
        btn_power_monitor.setText("power_monitor");
        btn_power_monitor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_power_monitor.setFocusPainted(false);
        btn_power_monitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_power_monitorActionPerformed(evt);
            }
        });

        btn_snes_monitor.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_snes_monitor.setForeground(java.awt.SystemColor.info);
        btn_snes_monitor.setText("snes_monitor");
        btn_snes_monitor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_snes_monitor.setFocusPainted(false);
        btn_snes_monitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_snes_monitorActionPerformed(evt);
            }
        });

        btn_solver.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_solver.setForeground(java.awt.SystemColor.info);
        btn_solver.setText("solver");
        btn_solver.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_solver.setFocusPainted(false);
        btn_solver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_solverActionPerformed(evt);
            }
        });

        btn_write_matrices.setBackground(java.awt.SystemColor.controlDkShadow);
        btn_write_matrices.setForeground(java.awt.SystemColor.info);
        btn_write_matrices.setText("write_matrices");
        btn_write_matrices.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_write_matrices.setFocusPainted(false);
        btn_write_matrices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_write_matricesActionPerformed(evt);
            }
        });

        comment5.setBackground(java.awt.SystemColor.controlDkShadow);
        comment5.setForeground(java.awt.SystemColor.info);
        comment5.setText("comment");
        comment5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        comment5.setFocusPainted(false);
        comment5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comment5ActionPerformed(evt);
            }
        });

        GuideTxt.setBackground(new java.awt.Color(231, 236, 125));
        GuideTxt.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        GuideTxt.setPreferredSize(new java.awt.Dimension(100, 20));
        GuideTxt.setRequestFocusEnabled(false);
        jScrollPane6.setViewportView(GuideTxt);

        javax.swing.GroupLayout cmfd_pnlLayout = new javax.swing.GroupLayout(cmfd_pnl);
        cmfd_pnl.setLayout(cmfd_pnlLayout);
        cmfd_pnlLayout.setHorizontalGroup(
            cmfd_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmfd_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cmfd_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cmfd_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_solver, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_snes_monitor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(run_adjoint, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_power_monitor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(btn_num_flushes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_norm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton53, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_ksp_monitor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_inactive_flush, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_inactive, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_feedback, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_display, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_begin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_active_flush, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_write_matrices, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(comment5, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cmfd_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        cmfd_pnlLayout.setVerticalGroup(
            cmfd_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmfd_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cmfd_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cmfd_pnlLayout.createSequentialGroup()
                        .addComponent(btn_active_flush)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_begin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_display)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_feedback)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_inactive)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_inactive_flush)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ksp_monitor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton53, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_norm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_num_flushes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_power_monitor)
                        .addGap(7, 7, 7)
                        .addComponent(run_adjoint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_snes_monitor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_solver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_write_matrices)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comment5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        container.addTab("CMFD ", cmfd_pnl);

        tlb.setRollover(true);
        tlb.add(lbl);

        label.setText("....");
        tlb.add(label);

        jMenuBar1.setBackground(java.awt.SystemColor.activeCaptionBorder);
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jMenu3.setText("File");

        menu_new_openmc_project.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menu_new_openmc_project.setText("New openmc project");
        menu_new_openmc_project.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_new_openmc_projectActionPerformed(evt);
            }
        });
        jMenu3.add(menu_new_openmc_project);

        menu_existing_project.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menu_existing_project.setText("Open an existing project");
        menu_existing_project.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_existing_projectActionPerformed(evt);
            }
        });
        jMenu3.add(menu_existing_project);

        menu_save_project.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menu_save_project.setText("Save project");
        menu_save_project.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_save_projectActionPerformed(evt);
            }
        });
        jMenu3.add(menu_save_project);

        menu_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menu_exit.setText("Exit");
        menu_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_exitActionPerformed(evt);
            }
        });
        jMenu3.add(menu_exit);

        jMenuBar1.add(jMenu3);

        jMenu4.setBackground(new java.awt.Color(102, 255, 102));
        jMenu4.setText("Tools");

        menu_run_openmc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menu_run_openmc.setText("Run OpenMC");
        menu_run_openmc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_run_openmcActionPerformed(evt);
            }
        });
        jMenu4.add(menu_run_openmc);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Show results");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Visualization");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Help");

        menu_about.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menu_about.setText("about");
        menu_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_aboutActionPerformed(evt);
            }
        });
        jMenu5.add(menu_about);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tlb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 1043, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menu_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menu_exitActionPerformed

    private void btn_surfaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_surfaceActionPerformed
      geometryTxt.replaceSelection("<surface id=\"\" type=\"\" coeffs=\"\" boundary=\"\"/> \n"); 
    }//GEN-LAST:event_btn_surfaceActionPerformed

    private void btn_materialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_materialActionPerformed
      materialsTxt.replaceSelection("<material id=\"\"  density=\"\">  </material>\n"); 
    }//GEN-LAST:event_btn_materialActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
  project_full_path=tmp.getPath();      
if (open_action=="no" || project_full_path!=""){

label.setText("Project directory: "+project_full_path);
open_xml_file("settings.xml",settingsTxt,project_full_path);
open_xml_file("geometry.xml",geometryTxt,project_full_path);
open_xml_file("materials.xml",materialsTxt,project_full_path);
open_xml_file("cmfd.xml",cmfdTxt,project_full_path);
open_xml_file("tallies.xml",talliesTxt,project_full_path);
open_xml_file("plots.xml",plottingTxt,project_full_path);

save_xml_file("settings.xml",project_full_path,settingsTxt);
save_xml_file("materials.xml",project_full_path,materialsTxt);
save_xml_file("geometry.xml",project_full_path,geometryTxt);
if (  talliesTxt.getText()!="") {save_xml_file("tallies.xml",project_full_path,talliesTxt);}
if (  plottingTxt.getText()!="") {save_xml_file("plots.xml",project_full_path,plottingTxt);}
if (  cmfdTxt.getText()!="") {save_xml_file("cmfd.xml",project_full_path,cmfdTxt);}


}

    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

setExtendedState(main.MAXIMIZED_BOTH); 
Configuration config = DefaultSyntaxKit.getConfig(DefaultSyntaxKit.class);
config.put("Style.KEYWORD2",Crimson+",0");
config.put("Style.KEYWORD",DarkGreen+",3");
config.put("Style.STRING",DarkBlue+", 3");
config.put("Style.STRING2",DarkBlue+",0");
config.put("Style.IDENTIFIER",Crimson+", 0");
config.put("Style.TYPE2",SlateGray+", 3");
config.put("Style.COMMENT2",Salmon+", 3");
config.put("Style.COMMENT",Salmon+", 3");
config.put("LineNumbers.Foreground","	0x009933, 3");
cmfdTxt.setContentType("text/xhtml");
geometryTxt.setContentType("text/xhtml");
talliesTxt.setContentType("text/xhtml");
materialsTxt.setContentType("text/xhtml");
settingsTxt.setContentType("text/xhtml");
plottingTxt.setContentType("text/xhtml");      
          }//GEN-LAST:event_formWindowOpened

    private void btn_cellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cellActionPerformed
      geometryTxt.replaceSelection("<cell id=\"\" material=\"\" surfaces=\"\" />\n"); 
    }//GEN-LAST:event_btn_cellActionPerformed

    private void btn_tallyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tallyActionPerformed
      talliesTxt.replaceSelection("<tally id=\"\" >  \n<filter type=\"\" bins=\"\">  </filter> \n<scores >  </scores>\n  </tally>\n"); 
    }//GEN-LAST:event_btn_tallyActionPerformed

    private void menu_save_projectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_save_projectActionPerformed
       
save_xml_file("settings.xml",project_full_path,settingsTxt);
save_xml_file("materials.xml",project_full_path,materialsTxt);
save_xml_file("geometry.xml",project_full_path,geometryTxt);
if (  talliesTxt.getText()!="") {save_xml_file("tallies.xml",project_full_path,talliesTxt);}
if (  plottingTxt.getText()!="") {save_xml_file("plots.xml",project_full_path,plottingTxt);}
if (  cmfdTxt.getText()!="") {save_xml_file("cmfd.xml",project_full_path,cmfdTxt);}
showMessageDialog(this.getParent(), "The project has been successfully saved ! ", "", JOptionPane.INFORMATION_MESSAGE) ;      
System.out.print(project_full_path);
    }//GEN-LAST:event_menu_save_projectActionPerformed

    private void menu_existing_projectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_existing_projectActionPerformed
     
open_action="yes";
JFileChooser fc = new JFileChooser(); 
fc.setDialogTitle("Open an exsisting OpenMC project");
fc.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
int returnVal = fc.showOpenDialog(this);
if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
java.io.File file = fc.getSelectedFile( );
file_name = file.toString( );
project_full_path=file_name;
      tmp.setPath(project_full_path);

label.setText("Project directory : "+project_full_path);
JOptionPane.showMessageDialog(this, "The project entitled '"+file.getName()+"' has been successfully opened ! ");
}
    }//GEN-LAST:event_menu_existing_projectActionPerformed

    private void btn_nuclideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuclideActionPerformed

materialsTxt.replaceSelection("<nuclide name=\"\" xs=\"\" ao=\"\" />\n");            
    }//GEN-LAST:event_btn_nuclideActionPerformed

    private void btn_densityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_densityActionPerformed
materialsTxt.replaceSelection("<density value=\"\" units=\"\" />\n");    
    }//GEN-LAST:event_btn_densityActionPerformed

    private void btn_elementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_elementActionPerformed
materialsTxt.replaceSelection("<element name=\"\" ao=\"\" />\n");    
    }//GEN-LAST:event_btn_elementActionPerformed

    private void btn_defaults_xsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_defaults_xsActionPerformed
materialsTxt.replaceSelection("<default_xs>  </default_xs>\n");    
    }//GEN-LAST:event_btn_defaults_xsActionPerformed

    private void btn_latticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_latticeActionPerformed
geometryTxt.replaceSelection("<lattice id=\"\">\n" +
"  <type>   </type> \n" +
"  <dimension>  </dimension> \n" +
"  <lower_left>   </lower_left> \n" +
"  <width>  </width> \n" +
"  <universes>  </universes> \n" +
"  </lattice>\n"); 
    }//GEN-LAST:event_btn_latticeActionPerformed

    private void btn_meshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_meshActionPerformed
talliesTxt.replaceSelection("<mesh>\n" +
"  <type>   </type> \n" +
"  <dimension>  </dimension> \n" +
"  <lower_left>   </lower_left> \n" +
"  <width>  </width> \n" +
"  <universes>  </universes> \n" +
"  </mesh>\n");    
    }//GEN-LAST:event_btn_meshActionPerformed

    private void btn_assume_separateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_assume_separateActionPerformed
talliesTxt.replaceSelection("<assume_separate> false </assume_separate>");    }//GEN-LAST:event_btn_assume_separateActionPerformed

    private void btn_plot_sliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plot_sliceActionPerformed
plottingTxt.replaceSelection(
"\n" +
"<plot id=\"\" color=\"\"  type=\"\" basis=\"\" background=\"\">\n" +
"<mask> </mask>\n" +
" <origin> </origin>\n" +
" <width> </width>\n" +
  " <col_spec id=\"\" rgb=\"\"><col_spec>\n" +
" <pixels>  </pixels>\n" +
" </plot>\n" +
"\n" 
);                                             
    }//GEN-LAST:event_btn_plot_sliceActionPerformed

    private void btn_plot_voxelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plot_voxelActionPerformed
plottingTxt.replaceSelection(
"\n" +
"<plot id=\"\" color=\"\"  type=\"\" >\n" +
"<mask> </mask>\n" +
" <origin> </origin>\n" +
" <width> </width>\n" +
  " <col_spec id=\"\" rgb=\"\"><col_spec>\n" +
" <pixels>  </pixels>\n" +
" </plot>\n" +
"\n" 
);            }//GEN-LAST:event_btn_plot_voxelActionPerformed

    private void btn_active_flushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_active_flushActionPerformed
cmfdTxt.replaceSelection("<active_flush> 0 </active_flush>\n");    }//GEN-LAST:event_btn_active_flushActionPerformed

    private void btn_beginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_beginActionPerformed
cmfdTxt.replaceSelection("<begin> 1 </begin>\n");                                            
    }//GEN-LAST:event_btn_beginActionPerformed

    private void btn_displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_displayActionPerformed
cmfdTxt.replaceSelection("<display> </display>\n");                                            
    }//GEN-LAST:event_btn_displayActionPerformed

    private void btn_feedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_feedbackActionPerformed
cmfdTxt.replaceSelection("<feedback> false </feedback>\n");                                            
    }//GEN-LAST:event_btn_feedbackActionPerformed

    private void btn_inactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inactiveActionPerformed
cmfdTxt.replaceSelection("<inactive> false </inactive>\n");                                            
    }//GEN-LAST:event_btn_inactiveActionPerformed

    private void btn_inactive_flushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inactive_flushActionPerformed
cmfdTxt.replaceSelection("<inactive_flush> 9999 </inactive_flush>\n");                                            
    }//GEN-LAST:event_btn_inactive_flushActionPerformed

    private void btn_ksp_monitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ksp_monitorActionPerformed
cmfdTxt.replaceSelection("<ksp_monitor> false </ksp_monitor>\n");                                            
    }//GEN-LAST:event_btn_ksp_monitorActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
cmfdTxt.replaceSelection("<mesh>\n" +
"<dimension>  </dimension>\n" +
"<upper_right>   </upper_right>\n" +
"<lower_left>   </lower_left>\n" +
"<energy>   </energy>\n" +
"<albedo> 1.0 1.0 1.0 1.0 1.0 1.0  </albedo>\n" +
"<width>  </width>\n" +       
"<map>  </map>\n" +
"<universes>  </universes>\n" +
"</mesh>\n");                                            
    }//GEN-LAST:event_jButton53ActionPerformed

    private void btn_normActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_normActionPerformed
cmfdTxt.replaceSelection("<norm> 1 </norm>\n");                                            
    }//GEN-LAST:event_btn_normActionPerformed

    private void btn_num_flushesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_num_flushesActionPerformed
cmfdTxt.replaceSelection("<num_flushes> 9999 </num_flushes>\n");                                            
    }//GEN-LAST:event_btn_num_flushesActionPerformed

    private void run_adjointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_adjointActionPerformed
cmfdTxt.replaceSelection("<run_adjoint> false </run_adjoint>\n");                                            
    }//GEN-LAST:event_run_adjointActionPerformed

    private void btn_power_monitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_power_monitorActionPerformed
cmfdTxt.replaceSelection("<power_monitor> false </power_monitor>\n");                                            
    }//GEN-LAST:event_btn_power_monitorActionPerformed

    private void btn_snes_monitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_snes_monitorActionPerformed
cmfdTxt.replaceSelection("<snes_monitor> false </snes_monitor>\n");                                            
    }//GEN-LAST:event_btn_snes_monitorActionPerformed

    private void btn_solverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_solverActionPerformed
cmfdTxt.replaceSelection("<solver> power </solver>\n");                                            
    }//GEN-LAST:event_btn_solverActionPerformed

    private void btn_write_matricesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_write_matricesActionPerformed
cmfdTxt.replaceSelection("<write_matrices> false </write_matrices>\n");                                            
    }//GEN-LAST:event_btn_write_matricesActionPerformed

    private void menu_run_openmcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_run_openmcActionPerformed
openmc_options  dialgo  =new     openmc_options();
  dialgo.show();     
   
      
             
}
        
//}    }//GEN-LAST:event_menu_run_openmcActionPerformed

    private void menu_new_openmc_projectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_new_openmc_projectActionPerformed
        // TODO add your handling code here:
 open_action="no";       
   new_openmc_project  dialgo  =new     new_openmc_project();
  dialgo.show();     
this.show(false);
    }//GEN-LAST:event_menu_new_openmc_projectActionPerformed

    private void menu_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_aboutActionPerformed
        
java.awt.EventQueue.invokeLater(new Runnable() {
          public void run() {
about myabout  =new     about();
          myabout.show();
           }
        }); 
    }//GEN-LAST:event_menu_aboutActionPerformed

    private void btn_comment2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_comment2ActionPerformed
        
materialsTxt.replaceSelection(" <!--            -->  \n");
        
    }//GEN-LAST:event_btn_comment2ActionPerformed

    private void btn_comment3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_comment3ActionPerformed
talliesTxt.replaceSelection(" <!--            -->  \n"); 
    }//GEN-LAST:event_btn_comment3ActionPerformed

    private void comment4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comment4ActionPerformed
        // TODO add your handling code here:
plottingTxt.replaceSelection(" <!--            -->  \n");
   
    }//GEN-LAST:event_comment4ActionPerformed

    private void comment5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comment5ActionPerformed
 
cmfdTxt.replaceSelection(" <!--            -->  \n");       
    }//GEN-LAST:event_comment5ActionPerformed

    private void comment6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comment6ActionPerformed
        // TODO add your handling code here:
     geometryTxt.replaceSelection(" <!--            -->  \n");   
    }//GEN-LAST:event_comment6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

 String ppm_file="";
JFileChooser fc = new JFileChooser(); 
FileNameExtensionFilter ppmfilter = new FileNameExtensionFilter("ppm files (*.ppm)", "ppm");
fc.setFileFilter(ppmfilter);
fc.setDialogTitle("Open a PPM file");
java.io.File dir = new File(project_full_path);
fc.setCurrentDirectory(dir);
fc.setFileSelectionMode( JFileChooser.FILES_ONLY);
int returnVal = fc.showOpenDialog(this);
if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
java.io.File file = fc.getSelectedFile( );
file_name = file.toString( );
ppm_file=file.getName();
//JOptionPane.showMessageDialog(this, "The PPM file:  '"+ppm_file+"' has been successfully opened ! ");
}
        
        Process process = null;  
        try {  
            Runtime.getRuntime().exec("eog "+project_full_path+"/"+ppm_file);
        } catch (IOException ex) {  
            System.out.print(ex);  
        } 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        
    tallies_results  dialgo  =new     tallies_results();
  dialgo.show();     
   
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void geometryTxtCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_geometryTxtCaretPositionChanged
        // TODO add your handling code here:
        save_xml_file("settings.xml",project_full_path,settingsTxt);
save_xml_file("materials.xml",project_full_path,materialsTxt);
save_xml_file("geometry.xml",project_full_path,geometryTxt);
if (  talliesTxt.getText()!="") {save_xml_file("tallies.xml",project_full_path,talliesTxt);}
if (  plottingTxt.getText()!="") {save_xml_file("plots.xml",project_full_path,plottingTxt);}
if (  cmfdTxt.getText()!="") {save_xml_file("cmfd.xml",project_full_path,cmfdTxt);}
        
        
    }//GEN-LAST:event_geometryTxtCaretPositionChanged

    private void geometryTxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_geometryTxtInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_geometryTxtInputMethodTextChanged

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        
        
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
save_xml_file("settings.xml",project_full_path,settingsTxt);
save_xml_file("materials.xml",project_full_path,materialsTxt);
save_xml_file("geometry.xml",project_full_path,geometryTxt);
if (  talliesTxt.getText()!="") {save_xml_file("tallies.xml",project_full_path,talliesTxt);}
if (  plottingTxt.getText()!="") {save_xml_file("plots.xml",project_full_path,plottingTxt);}
if (  cmfdTxt.getText()!="") {save_xml_file("cmfd.xml",project_full_path,cmfdTxt);}
    }//GEN-LAST:event_formMouseExited

    private void plottingTxtCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_plottingTxtCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_plottingTxtCaretPositionChanged

    private void plottingTxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_plottingTxtInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_plottingTxtInputMethodTextChanged

    private void materialsTxtCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_materialsTxtCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_materialsTxtCaretPositionChanged

    private void materialsTxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_materialsTxtInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_materialsTxtInputMethodTextChanged

    private void settingsTxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_settingsTxtInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsTxtInputMethodTextChanged

    private void settingsTxtCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_settingsTxtCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsTxtCaretPositionChanged

    private void btn_commentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_commentActionPerformed

    }//GEN-LAST:event_btn_commentActionPerformed

    private void btn_sourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sourceActionPerformed

        settingsTxt.replaceSelection("<source>\n" +
            "<file>  </file>\n" +
            "<space>  \n" +
            "<type> </type> \n" +
            "<parameters> </parameters>  \n" +
            "</space>\n" +
            "<angle>  \n" +
            "<type> </type> \n" +
            "<parameters> </parameters>  \n" +
            "</angle>\n" +
            "<energy>  \n" +
            "<type> </type> \n" +
            "<parameters> </parameters>  \n" +
            "</energy>\n" +
            "</source>\n");
    }//GEN-LAST:event_btn_sourceActionPerformed

    private void btn_verbosityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_verbosityActionPerformed

        settingsTxt.replaceSelection("<verbosity> 5 </verbosity>\n");
    }//GEN-LAST:event_btn_verbosityActionPerformed

    private void btn_uniform_fsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_uniform_fsActionPerformed
        settingsTxt.replaceSelection("<uniform_fs>\n" +
            "<lower_left>   </lower_left>\n" +
            "<upper_right>   </upper_right>\n" +
            "<dimension>   </dimension>\n" +
            "</uniform_fs>\n");
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_uniform_fsActionPerformed

    private void btn_trackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_trackActionPerformed
        settingsTxt.replaceSelection("<track>\n" +
            "</track>\n");
    }//GEN-LAST:event_btn_trackActionPerformed

    private void btn_traceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_traceActionPerformed

    }//GEN-LAST:event_btn_traceActionPerformed

    private void btn_threadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_threadsActionPerformed
        settingsTxt.replaceSelection("<threads>\n </threads>");
    }//GEN-LAST:event_btn_threadsActionPerformed

    private void btn_survival_biasingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_survival_biasingActionPerformed
        settingsTxt.replaceSelection("<survival_biasing> false </survival_biasing>\n");
    }//GEN-LAST:event_btn_survival_biasingActionPerformed

    private void btn_source_pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_source_pointActionPerformed
        settingsTxt.replaceSelection("<source_point>\n" +
            "<batches>  </batches>\n" +
            "<interval>  </interval>\n" +
            "<source_write>  </source_write>\n" +
            "</source_point>\n");
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_source_pointActionPerformed

    private void btn_seedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_seedActionPerformed
        settingsTxt.replaceSelection("<seed> 1 </seed>\n");
    }//GEN-LAST:event_btn_seedActionPerformed

    private void btn_run_cmfdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_run_cmfdActionPerformed
        settingsTxt.replaceSelection("<run_cmfd> false </run_cmfd>\n");
    }//GEN-LAST:event_btn_run_cmfdActionPerformed

    private void btn_ptablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ptablesActionPerformed
        settingsTxt.replaceSelection("<ptables> true </ptables>\n");
    }//GEN-LAST:event_btn_ptablesActionPerformed

    private void btn_output_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_output_pathActionPerformed
        settingsTxt.replaceSelection("<output_path>  </output_path>\n");
    }//GEN-LAST:event_btn_output_pathActionPerformed

    private void btn_outputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_outputActionPerformed
        settingsTxt.replaceSelection("<output>\n" +
            "<cross_sections> false  </cross_sections>\n" +
            "<summary> false  </summary> \n" +
            "<tallies> false </tallies>  \n" +
            "\n </output>");
    }//GEN-LAST:event_btn_outputActionPerformed

    private void btn_no_reduceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_no_reduceActionPerformed
        settingsTxt.replaceSelection("<no_reduce> false </no_reduce>\n");
    }//GEN-LAST:event_btn_no_reduceActionPerformed

    private void btn_fixed_sourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fixed_sourceActionPerformed
        settingsTxt.replaceSelection("<fixed_source>\n" +
            "<batches> false  </batches>\n" +
            "<particles> false </particles>\n </fixed_source>");
    }//GEN-LAST:event_btn_fixed_sourceActionPerformed

    private void btn_entropyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_entropyActionPerformed
        settingsTxt.replaceSelection("<entropy>\n" +
            "<lower_left>   </lower_left>\n" +
            "<upper_right>   </upper_right>\n" +
            "<dimension>   </dimension>\n" +
            "</entropy>\n");
    }//GEN-LAST:event_btn_entropyActionPerformed

    private void btn_energy_gridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_energy_gridActionPerformed
        settingsTxt.replaceSelection("<energy_grid> union </energy_grid>\n");
    }//GEN-LAST:event_btn_energy_gridActionPerformed

    private void btn_eignvalueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eignvalueActionPerformed
        settingsTxt.replaceSelection("<eigenvalue> \n<batches>  </batches> \n<generations_per_batch>  </generations_per_batch>\n<inactive>  </inactive> \n<particles>  </particles> \n</eigenvalue>\n");
    }//GEN-LAST:event_btn_eignvalueActionPerformed

    private void btn_cutoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cutoffActionPerformed
        settingsTxt.replaceSelection("<cutoff> \n<weight> 0.25 </weight> \n<weight_avg> 1 </weight_avg> \n</cutoff>\n");
    }//GEN-LAST:event_btn_cutoffActionPerformed

    private void btn_cross_sectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cross_sectionsActionPerformed
        settingsTxt.replaceSelection("<cross_section>  </cross_section>\n");
    }//GEN-LAST:event_btn_cross_sectionsActionPerformed

    private void btn_confidence_intervalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confidence_intervalsActionPerformed
        settingsTxt.replaceSelection("<confidence_intervals> false </confidence_intervals> \n");
    }//GEN-LAST:event_btn_confidence_intervalsActionPerformed

    private void btn_active_flushMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_active_flushMouseEntered
        // TODO add your handling code here:
        
        GuideTxt.setText("The <active_flush> element controls the batch where CMFD tallies should be reset. CMFD tallies should be reset before active batches so they are accumulated without bias.");
        
    }//GEN-LAST:event_btn_active_flushMouseEntered

    private void btn_beginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_beginMouseEntered
        // TODO add your handling code here:
                GuideTxt.setText("The <begin> element controls what batch CMFD calculations should begin.\n" +
"\n" +
"    Default: 1");

    }//GEN-LAST:event_btn_beginMouseEntered

    private void btn_displayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_displayMouseEntered
        // TODO add your handling code here:
         GuideTxt.setText("The <display> element sets one additional CMFD output column. Options are:\n" +
"\n" +
"    “balance” - prints the RMS [%] of the resdiual from the neutron balance equation on CMFD tallies.\n" +
"\n" +
"    “dominance” - prints the estimated dominance ratio from the CMFD iterations. This will only work for power iteration eigensolver.\n" +
"\n" +
"    “entropy” - prints the entropy of the CMFD predicted fission source. Can only be used if OpenMC entropy is active as well.\n" +
"\n" +
"    “source” - prints the RMS [%] between the OpenMC fission source and CMFD fission source.\n" +
"\n" +
"    Default: None");

    }//GEN-LAST:event_btn_displayMouseEntered

    private void btn_feedbackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_feedbackMouseEntered
        // TODO add your handling code here:
        GuideTxt.setText("The <feedback> element controls whether or not the CMFD diffusion result is used to adjust the weight of fission source neutrons on the next OpenMC batch. It can be turned on with “true” and off with “false”.\n" +
"\n" +
"    Default: false");
    }//GEN-LAST:event_btn_feedbackMouseEntered

    private void btn_inactiveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_inactiveMouseEntered
        // TODO add your handling code here:
        GuideTxt.setText("The <inactive> element controls if cmfd tallies should be accumulated during inactive batches. For some applications, CMFD tallies may not be needed until the start of active batches. This option can be turned on with “true” and off with “false”\n" +
"\n" +
"    Default: true");
    }//GEN-LAST:event_btn_inactiveMouseEntered

    private void btn_inactive_flushMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_inactive_flushMouseEntered
        // TODO add your handling code here:
        GuideTxt.setText("The <inactive_flush> element controls when CMFD tallies are reset during inactive batches. The integer set here is the interval at which this reset occurs. The amout of resets is controlled with the <num_flushes> element.\n" +
"\n" +
"    Defualt: 9999");
    }//GEN-LAST:event_btn_inactive_flushMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {

                
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane GuideTxt;
    private javax.swing.JEditorPane GuideTxt1;
    private javax.swing.JButton btn_active_flush;
    private javax.swing.JButton btn_assume_separate;
    private javax.swing.JButton btn_begin;
    private javax.swing.JButton btn_cell;
    private javax.swing.JButton btn_comment;
    private javax.swing.JButton btn_comment2;
    private javax.swing.JButton btn_comment3;
    private javax.swing.JButton btn_confidence_intervals;
    private javax.swing.JButton btn_cross_sections;
    private javax.swing.JButton btn_cutoff;
    private javax.swing.JButton btn_defaults_xs;
    private javax.swing.JButton btn_density;
    private javax.swing.JButton btn_display;
    private javax.swing.JButton btn_eignvalue;
    private javax.swing.JButton btn_element;
    private javax.swing.JButton btn_energy_grid;
    private javax.swing.JButton btn_entropy;
    private javax.swing.JButton btn_feedback;
    private javax.swing.JButton btn_fixed_source;
    private javax.swing.JButton btn_inactive;
    private javax.swing.JButton btn_inactive_flush;
    private javax.swing.JButton btn_ksp_monitor;
    private javax.swing.JButton btn_lattice;
    private javax.swing.JButton btn_material;
    private javax.swing.JButton btn_mesh;
    private javax.swing.JButton btn_no_reduce;
    private javax.swing.JButton btn_norm;
    private javax.swing.JButton btn_nuclide;
    private javax.swing.JButton btn_num_flushes;
    private javax.swing.JButton btn_output;
    private javax.swing.JButton btn_output_path;
    private javax.swing.JButton btn_plot_slice;
    private javax.swing.JButton btn_plot_voxel;
    private javax.swing.JButton btn_power_monitor;
    private javax.swing.JButton btn_ptables;
    private javax.swing.JButton btn_run_cmfd;
    private javax.swing.JButton btn_seed;
    private javax.swing.JButton btn_snes_monitor;
    private javax.swing.JButton btn_solver;
    private javax.swing.JButton btn_source;
    private javax.swing.JButton btn_source_point;
    private javax.swing.JButton btn_surface;
    private javax.swing.JButton btn_survival_biasing;
    private javax.swing.JButton btn_tally;
    private javax.swing.JButton btn_threads;
    private javax.swing.JButton btn_trace;
    private javax.swing.JButton btn_track;
    private javax.swing.JButton btn_uniform_fs;
    private javax.swing.JButton btn_verbosity;
    private javax.swing.JButton btn_write_matrices;
    private javax.swing.JEditorPane cmfdTxt;
    private javax.swing.JPanel cmfd_pnl;
    private javax.swing.JButton comment4;
    private javax.swing.JButton comment5;
    private javax.swing.JButton comment6;
    private javax.swing.JTabbedPane container;
    private javax.swing.JEditorPane geometryTxt;
    private javax.swing.JPanel geometry_pnl;
    private javax.swing.JButton jButton53;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel label;
    private javax.swing.JLabel lbl;
    private javax.swing.JEditorPane materialsTxt;
    private javax.swing.JPanel materials_pnl;
    private javax.swing.JMenuItem menu_about;
    private javax.swing.JMenuItem menu_existing_project;
    private javax.swing.JMenuItem menu_exit;
    private javax.swing.JMenuItem menu_new_openmc_project;
    private javax.swing.JMenuItem menu_run_openmc;
    private javax.swing.JMenuItem menu_save_project;
    private javax.swing.JEditorPane plottingTxt;
    private javax.swing.JPanel plotting_pnl;
    private javax.swing.JButton run_adjoint;
    private javax.swing.JEditorPane settingsTxt;
    private javax.swing.JPanel settings_pnl;
    private javax.swing.JEditorPane talliesTxt;
    private javax.swing.JPanel tallies_pnl;
    private javax.swing.JToolBar tlb;
    // End of variables declaration//GEN-END:variables
}
