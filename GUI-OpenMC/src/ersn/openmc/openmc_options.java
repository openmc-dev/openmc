/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ersn.openmc;

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author elbakkali
 */
public class openmc_options extends javax.swing.JFrame {
String project_full_path="";
    /**
     * Creates new form OpenMC_Options
     */
    public openmc_options() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        select_cmfd2 = new javax.swing.JCheckBox();
        npg_lbl = new javax.swing.JCheckBox();
        geom_debug = new javax.swing.JCheckBox();
        plot = new javax.swing.JCheckBox();
        select_cmfd4 = new javax.swing.JCheckBox();
        wtrackall_lbl = new javax.swing.JCheckBox();
        noth_lbl = new javax.swing.JCheckBox();
        btn_cancel = new javax.swing.JButton();
        btn_ok = new javax.swing.JButton();
        npg = new javax.swing.JTextField();
        _file_box = new javax.swing.JTextField();
        noth = new javax.swing.JTextField();

        select_cmfd2.setText(" geometry debugging mode");
        select_cmfd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_cmfd2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OpenMC options");
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        npg_lbl.setText("number of particles per generation");
        npg_lbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npg_lblActionPerformed(evt);
            }
        });

        geom_debug.setText(" geometry debugging mode");
        geom_debug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geom_debugActionPerformed(evt);
            }
        });

        plot.setText("plotting mode");
        plot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotActionPerformed(evt);
            }
        });

        select_cmfd4.setText("restart a previous run");
        select_cmfd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_cmfd4ActionPerformed(evt);
            }
        });

        wtrackall_lbl.setText("write tracks for all particles ");
        wtrackall_lbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wtrackall_lblActionPerformed(evt);
            }
        });

        noth_lbl.setText("number of OpenMP threads");
        noth_lbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noth_lblActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        btn_ok.setText("OK");
        btn_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(geom_debug, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wtrackall_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plot, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(npg_lbl)
                            .addGap(2, 2, 2)
                            .addComponent(npg, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(noth_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(noth))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(select_cmfd4)
                        .addGap(18, 18, 18)
                        .addComponent(_file_box)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(geom_debug)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npg_lbl)
                    .addComponent(npg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(plot)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select_cmfd4)
                    .addComponent(_file_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noth_lbl)
                    .addComponent(noth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(wtrackall_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancel)
                    .addComponent(btn_ok))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void npg_lblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npg_lblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_npg_lblActionPerformed

    private void geom_debugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geom_debugActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_geom_debugActionPerformed

    private void select_cmfd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_cmfd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_select_cmfd2ActionPerformed

    private void plotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plotActionPerformed

    private void select_cmfd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_cmfd4ActionPerformed
        // TODO add your handling code here:
        String _file="";
JFileChooser fc = new JFileChooser(); 

fc.setDialogTitle("Open a  file");
java.io.File dir = new File(project_full_path);
fc.setCurrentDirectory(dir);
fc.setFileSelectionMode( JFileChooser.FILES_ONLY);
int returnVal = fc.showOpenDialog(this);
if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
java.io.File file = fc.getSelectedFile(); 
      _file=file.getName();
_file_box.setText(_file);
        }

    }//GEN-LAST:event_select_cmfd4ActionPerformed

    private void wtrackall_lblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wtrackall_lblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wtrackall_lblActionPerformed

    private void noth_lblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noth_lblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noth_lblActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        this.show(false);
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_okActionPerformed
        // TODO add your handling code here:
String Flag_debug_mode="", Flag_plot_mode="",Options="",Flag_npg="",Flag_noth="",Flag_wtrackall="";

if (geom_debug.isSelected()==true) Flag_debug_mode=" -g ";
if (plot.isSelected()==true) Flag_plot_mode=" -p ";
if (npg_lbl.isSelected()==true) Flag_npg=" -n "+npg.getText().toString()+" ";
if (noth_lbl.isSelected()==true) Flag_noth=" -s "+noth.getText().toString()+" ";
if (wtrackall_lbl.isSelected()==true) Flag_wtrackall="-t ";

Options=Flag_wtrackall+Flag_debug_mode+Flag_plot_mode+Flag_npg+Flag_noth;

        Process process = null;  
        try {  
           //
Runtime.getRuntime().exec("xterm -title ERSN-OpenMC_Console -sb -l -lf "+project_full_path+"/tallies.out"+" -sl 2000 -hold -e openmc "+Options+project_full_path);
             //Runtime.getRuntime().exec("gnome-terminal  -e openmc  "+project_full_path);
       
        } catch (IOException ex) {  
            System.out.print(ex);  
        }   
this.show(false);       
    }//GEN-LAST:event_btn_okActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
                  singleton tmp = singleton.getInstance();
 
        
        project_full_path=tmp.getPath();

    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(openmc_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(openmc_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(openmc_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(openmc_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new openmc_options().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField _file_box;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_ok;
    private javax.swing.JCheckBox geom_debug;
    private javax.swing.JTextField noth;
    private javax.swing.JCheckBox noth_lbl;
    private javax.swing.JTextField npg;
    private javax.swing.JCheckBox npg_lbl;
    private javax.swing.JCheckBox plot;
    private javax.swing.JCheckBox select_cmfd2;
    private javax.swing.JCheckBox select_cmfd4;
    private javax.swing.JCheckBox wtrackall_lbl;
    // End of variables declaration//GEN-END:variables
}
